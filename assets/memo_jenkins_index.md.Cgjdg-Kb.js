import{_ as s,c as a,o as i,ah as n}from"./chunks/framework.C0b4S5mr.js";const b=JSON.parse('{"title":"项目打包和自动化部署","description":"","frontmatter":{},"headers":[],"relativePath":"memo/jenkins/index.md","filePath":"memo/jenkins/index.md","lastUpdated":1692610285000}'),l={name:"memo/jenkins/index.md"},p=n(`<h1 id="项目打包和自动化部署" tabindex="-1">项目打包和自动化部署 <a class="header-anchor" href="#项目打包和自动化部署" aria-label="Permalink to &quot;项目打包和自动化部署&quot;">​</a></h1><h2 id="一-项目部署和devops" tabindex="-1">一. 项目部署和DevOps <a class="header-anchor" href="#一-项目部署和devops" aria-label="Permalink to &quot;一. 项目部署和DevOps&quot;">​</a></h2><h3 id="_1-1-传统的开发模式" tabindex="-1">1.1. 传统的开发模式 <a class="header-anchor" href="#_1-1-传统的开发模式" aria-label="Permalink to &quot;1.1. 传统的开发模式&quot;">​</a></h3><p>在传统的开发模式中，开发的整个过程是按部就班就行：</p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211720627.png" alt=""></p><p>但是这种模式存在很大的弊端：</p><ul><li>工作的不协调：开发人员在开发阶段，测试和运维人员其实是处于等待的状态。等到测试阶段，开发人员等待测试反馈bug，也会处于等待状态。</li><li>线上bug的隐患：项目准备交付时，突然出现了bug，所有人员需要加班、等待问题的处理；</li></ul><h3 id="_1-2-devops开发模式" tabindex="-1">1.2. DevOps开发模式 <a class="header-anchor" href="#_1-2-devops开发模式" aria-label="Permalink to &quot;1.2. DevOps开发模式&quot;">​</a></h3><p>DevOps是Development和Operations两个词的结合，将开发和运维结合起来的模式：</p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211721353.png" alt=""></p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211721396.png" alt=""></p><h3 id="_1-3-持续集成和持续交付" tabindex="-1">1.3. 持续集成和持续交付 <a class="header-anchor" href="#_1-3-持续集成和持续交付" aria-label="Permalink to &quot;1.3. 持续集成和持续交付&quot;">​</a></h3><p>伴随着DevOps一起出现的两个词就是持续集成和持续交付(部署)：</p><ul><li>CI是Continuous Integration（持续集成）；</li><li>CD是两种翻译：Continuous Delivery（持续交付）或Continuous Deployment（持续部署）；</li></ul><p>持续集成CI：</p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211721786.png" alt=""></p><p>持续交付和持续部署：</p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211722668.png" alt=""></p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211723549.png" alt=""></p><h3 id="_1-4-自动化部署流程" tabindex="-1">1.4. 自动化部署流程 <a class="header-anchor" href="#_1-4-自动化部署流程" aria-label="Permalink to &quot;1.4. 自动化部署流程&quot;">​</a></h3><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211723532.png" alt=""></p><h2 id="二-购买云服务器" tabindex="-1">二. 购买云服务器 <a class="header-anchor" href="#二-购买云服务器" aria-label="Permalink to &quot;二. 购买云服务器&quot;">​</a></h2><h3 id="_2-1-注册阿里云的账号" tabindex="-1">2.1. 注册阿里云的账号 <a class="header-anchor" href="#_2-1-注册阿里云的账号" aria-label="Permalink to &quot;2.1. 注册阿里云的账号&quot;">​</a></h3><p>云服务器我们可以有很多的选择：阿里云、腾讯云、华为云。</p><ul><li>目前在公司使用比较多的是阿里云；</li><li>我自己之前也一直使用阿里云，也在使用腾讯云；</li><li>之前华为云也有找我帮忙推广他们的活动；</li></ul><p>但是在我们的课程中，我选择目前使用更加广泛的阿里云来讲解：</p><p>我们需要注册阿里云账号</p><ul><li><p><a href="https://aliyun.com/" target="_blank" rel="noreferrer">https://aliyun.com/</a></p></li><li><p>注册即可，非常简单</p></li></ul><h3 id="_2-2-购买云服务器" tabindex="-1">2.2. 购买云服务器 <a class="header-anchor" href="#_2-2-购买云服务器" aria-label="Permalink to &quot;2.2. 购买云服务器&quot;">​</a></h3><p>购买云服务器其实是购买一个实例。</p><p>1.来到控制台：</p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211723593.png" alt=""></p><p>2.创建实例，选择类型和配置</p><p>3.配置网络安全组</p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211724724.png" alt=""></p><p>4.创建实例</p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211724445.png" alt=""></p><h2 id="三-搭建服务器环境" tabindex="-1">三. 搭建服务器环境 <a class="header-anchor" href="#三-搭建服务器环境" aria-label="Permalink to &quot;三. 搭建服务器环境&quot;">​</a></h2><h3 id="_3-1-jenkins自动化部署" tabindex="-1">3.1. jenkins自动化部署 <a class="header-anchor" href="#_3-1-jenkins自动化部署" aria-label="Permalink to &quot;3.1. jenkins自动化部署&quot;">​</a></h3><h4 id="_3-1-1-安装java环境" tabindex="-1">3.1.1. 安装Java环境 <a class="header-anchor" href="#_3-1-1-安装java环境" aria-label="Permalink to &quot;3.1.1. 安装Java环境&quot;">​</a></h4><p>Jenkins本身是依赖Java的，所以我们需要先安装Java环境：</p><ul><li>这里我安装了Java1.8的环境</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> search</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java-1.8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java-1.8.0-openjdk.x86_64</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_3-1-2-安装jenkins" tabindex="-1">3.1.2. 安装Jenkins <a class="header-anchor" href="#_3-1-2-安装jenkins" aria-label="Permalink to &quot;3.1.2. 安装Jenkins&quot;">​</a></h4><p>因为Jenkins本身是没有在dnf的软件仓库包中的，所以我们需要连接Jenkins仓库：</p><ul><li>wget是Linux中下载文件的一个工具，-O表示输出到某个文件夹并且命名为什么文件；</li><li>rpm：全称为<strong>The RPM Package Manage</strong>，是Linux下一个软件包管理器；</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> –O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/yum.repos.d/jenkins.repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jenkins.repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/yum.repos.d/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 导入GPG密钥以确保您的软件合法</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://pkg.jenkins.io/redhat/jenkins.io.key</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>编辑一下文件/etc/yum.repos.d/jenkins.repo</p><ul><li>可以通过vim编辑</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[jenkins]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>name=Jenkins-stable</span></span>
<span class="line"><span></span></span>
<span class="line"><span>baseurl=http://pkg.jenkins.io/redhat</span></span>
<span class="line"><span></span></span>
<span class="line"><span>gpgcheck=1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>安装Jenkins</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jenkins</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # --nogpgcheck(可以不加)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>启动Jenkins的服务：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jenkins</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jenkins</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jenkins</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/var/lib/jenkins/secrets/initialAdminPassword</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Jenkins默认使用8080端口提供服务，所以需要加入到安全组中：</p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211725367.png" alt=""></p><h4 id="_3-1-3-jenkins用户" tabindex="-1">3.1.3. Jenkins用户 <a class="header-anchor" href="#_3-1-3-jenkins用户" aria-label="Permalink to &quot;3.1.3. Jenkins用户&quot;">​</a></h4><p>我们后面会访问centos中的某些文件夹，默认Jenkins使用的用户是 <code>jenkins</code>，可能会没有访问权限，所以我们需要修改一下它的用户：</p><p>修改文件的路径：<code>/etc/sysconfig/jenkins</code></p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211725879.png" alt=""></p><p>之后需要重启一下Jenkins：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jenkins</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_3-1-4-jenkins配置" tabindex="-1">3.1.4. Jenkins配置 <a class="header-anchor" href="#_3-1-4-jenkins配置" aria-label="Permalink to &quot;3.1.4. Jenkins配置&quot;">​</a></h4><p>打开浏览器，输入：<a href="http://8.134.60.235:8080/" target="_blank" rel="noreferrer">http://8.134.60.235:8080/</a></p><ul><li>注意：你输入自己的IP地址</li></ul><p>获取输入管理员密码：</p><ul><li>在下面的地址中 <code>cat /var/lib/jenkins/secrets/initialAdminPassword</code></li></ul><p>可以安装推荐的插件：</p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211725071.png" alt=""></p><h4 id="_3-1-5-jenkins任务" tabindex="-1">3.1.5. Jenkins任务 <a class="header-anchor" href="#_3-1-5-jenkins任务" aria-label="Permalink to &quot;3.1.5. Jenkins任务&quot;">​</a></h4><p><strong>新建任务：</strong></p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211726309.png" alt=""><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211726520.png" alt=""></p><p><strong>配置项目和保留策略：</strong></p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211726124.png" alt=""></p><p><strong>源码管理：</strong></p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211726799.png" alt=""></p><p><strong>构建触发器：</strong></p><p>这里的触发器规则是这样的：</p><ul><li>定时字符串从左往右分别是：分 时 日 月 周</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#每半小时构建一次OR每半小时检查一次远程代码分支，有更新则构建</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">H</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#每两小时构建一次OR每两小时检查一次远程代码分支，有更新则构建</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">H</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> H</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#每天凌晨两点定时构建</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">H</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#每月15号执行构建</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">H</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> H</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#工作日，上午9点整执行</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">H</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#每周1,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">，</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">从8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:30开始，</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">截止19</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">，每4小时30分构建一次</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">H</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211727823.png" alt=""><strong>构建环境：</strong></p><p>注意：我们需要搭建Node的环境</p><ul><li>第一步：配置Node的环境；</li><li>第二步：安装Node的插件；</li></ul><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211727333.png" alt=""> 第一步：配置Node的环境</p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211727432.png" alt=""></p><p>第二步：安装Node的插件</p><ul><li>这里因为我已经安装过了，所以没有搜索到；</li></ul><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211727008.png" alt=""> 构建执行的任务：</p><ul><li>查看Node的版本等是否有问题；</li><li>执行 <code>npm install</code> 安装项目的依赖；</li><li>移除原来mall_cms文件的所有内容；</li><li>将打包的dist文件夹内容移动到mall_cms文件夹；</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;构建成功&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除/root/mall_cms文件夹里所有的内容</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/mall_cms/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./dist/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/mall_cms/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211727758.png" alt=""></p><h3 id="_3-2-nginx安装和配置" tabindex="-1">3.2. nginx安装和配置 <a class="header-anchor" href="#_3-2-nginx安装和配置" aria-label="Permalink to &quot;3.2. nginx安装和配置&quot;">​</a></h3><h4 id="_3-2-1-安装nginx" tabindex="-1">3.2.1. 安装nginx <a class="header-anchor" href="#_3-2-1-安装nginx" aria-label="Permalink to &quot;3.2.1. 安装nginx&quot;">​</a></h4><p>后续我们部署会使用nginx，所以需要先安装一下nginx：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>启动nginx：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_3-2-2-配置nginx" tabindex="-1">3.2.2. 配置nginx <a class="header-anchor" href="#_3-2-2-配置nginx" aria-label="Permalink to &quot;3.2.2. 配置nginx&quot;">​</a></h4><p>我们这里主要配置nginx的用户和默认访问目录：</p><p>配置用户：</p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211728942.png" alt=""> 通过Linux命令创建文件夹和文件：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/mall_cms</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/mall_cms</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index.html</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index.html</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>配置访问目录：</p><p><img src="https://imgsbed-1301560453.cos.ap-shanghai.myqcloud.com//blog202308211728630.png" alt=""></p>`,104),e=[p];function h(t,r,k,d,c,g){return i(),a("div",null,e)}const m=s(l,[["render",h]]);export{b as __pageData,m as default};
